# Generated by Django 4.2.8 on 2024-02-13 14:04

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="VerifCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone_number", models.CharField(max_length=11, verbose_name="手机号码")),
                ("code", models.CharField(max_length=6, verbose_name="验证码")),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="生成时间"),
                ),
            ],
            options={
                "verbose_name": "手机验证码表",
                "verbose_name_plural": "手机验证码表",
                "db_table": "verifcode",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("is_delete", models.BooleanField(default=False, verbose_name="删除标记")),
                (
                    "username",
                    models.CharField(max_length=20, unique=True, verbose_name="用户名"),
                ),
                (
                    "wechat",
                    models.CharField(default="", max_length=25, verbose_name="wechat"),
                ),
                ("student_number", models.CharField(max_length=20, verbose_name="学号")),
                ("phone_number", models.CharField(max_length=20, verbose_name="电话")),
                ("grade", models.IntegerField(default=0, verbose_name="年级")),
                (
                    "email",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="邮箱"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, null=True, upload_to="", verbose_name="用户头像"
                    ),
                ),
                (
                    "gender",
                    models.IntegerField(
                        choices=[(0, "未知"), (1, "男"), (2, "女")],
                        default=0,
                        verbose_name="性别",
                    ),
                ),
                (
                    "is_authenticated",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                ("is_staff", models.BooleanField(default=False, verbose_name="管理员")),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="超级用户"),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True, max_length=150, null=True, verbose_name="密码"
                    ),
                ),
                (
                    "openid",
                    models.CharField(
                        max_length=64, null=True, unique=True, verbose_name="微信openid"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户表",
                "verbose_name_plural": "用户表",
                "db_table": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
